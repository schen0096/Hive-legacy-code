# Generated by Django 2.1.5 on 2020-10-13 20:52

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ds', '0041_pagesummary'),
    ]

    operations = [
        migrations.CreateModel(
            name='GatekeeperLogAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('update_by', models.CharField(max_length=255)),
                ('subscription_id', models.IntegerField()),
                ('company_name', models.CharField(max_length=255)),
                ('client_status', models.IntegerField()),
                ('product_access', models.CharField(max_length=255)),
                ('full_access', models.IntegerField()),
                ('ftp_access', models.IntegerField()),
                ('data_access', models.DateTimeField(blank=True, null=True)),
                ('action_taken', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'gatekeeper_log_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GatekeeperLogSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('update_by', models.CharField(max_length=255)),
                ('subscription_id', models.IntegerField()),
                ('permission_id', models.IntegerField()),
                ('action_taken', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'gatekeeper_log_subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GatekeeperLogUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_time', models.DateTimeField(blank=True, null=True)),
                ('update_by', models.CharField(max_length=255)),
                ('subscription_id', models.IntegerField()),
                ('user_full_name', models.CharField(max_length=255)),
                ('user_email', models.CharField(max_length=255)),
                ('account_status', models.IntegerField()),
                ('action_taken', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'gatekeeper_log_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermissionMaster',
            fields=[
                ('permission_id', models.AutoField(primary_key=True, serialize=False)),
                ('subscription_id', models.IntegerField(blank=True, null=True)),
                ('product_type', models.CharField(blank=True, max_length=255, null=True)),
                ('main_criterion', models.CharField(blank=True, max_length=255, null=True)),
                ('mc_value', models.CharField(blank=True, max_length=255, null=True)),
                ('second_criterion', models.CharField(blank=True, max_length=255, null=True)),
                ('sc_value', models.CharField(blank=True, max_length=255, null=True)),
                ('third_criterion', models.CharField(blank=True, max_length=255, null=True)),
                ('tc_value', models.CharField(blank=True, max_length=255, null=True)),
                ('fourth_criterion', models.CharField(blank=True, max_length=255, null=True)),
                ('fc_value', models.CharField(blank=True, max_length=255, null=True)),
                ('permission_status', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'permission_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersEmailMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_id', models.IntegerField(blank=True, null=True)),
                ('org_id', models.CharField(blank=True, max_length=255, null=True)),
                ('org_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.CharField(blank=True, max_length=8, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('access_level', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users_email_mapping',
                'managed': False,
            },
        ),
    ]
