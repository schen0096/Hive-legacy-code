# Generated by Django 2.1.5 on 2019-09-04 19:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DuplicateRowCheckMarketLevel',
            fields=[
                ('segment', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('platform', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('genre', models.CharField(blank=True, max_length=255, null=True)),
                ('month', models.IntegerField(blank=True, db_column='MONTH', null=True)),
                ('year', models.IntegerField(blank=True, db_column='YEAR', null=True)),
                ('row_count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'duplicate_row_check_market_level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuplicateRowCheckMarketLevelGenre',
            fields=[
                ('segment', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('platform', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('genre', models.CharField(blank=True, max_length=255, null=True)),
                ('month', models.IntegerField(blank=True, db_column='MONTH', null=True)),
                ('year', models.IntegerField(blank=True, db_column='YEAR', null=True)),
                ('row_count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'duplicate_row_check_market_level_genre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuplicateRowCheckMarketLevelPlatform',
            fields=[
                ('segment', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('platform', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('month', models.IntegerField(blank=True, db_column='MONTH', null=True)),
                ('year', models.IntegerField(blank=True, db_column='YEAR', null=True)),
                ('row_count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'duplicate_row_check_market_level_platform',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuplicateRowCheckTitleLevel',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('platform', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, db_column='MONTH', null=True)),
                ('year', models.IntegerField(blank=True, db_column='YEAR', null=True)),
                ('row_count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'duplicate_row_check_title_level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NegativeCheckMarketLevel',
            fields=[
                ('metric', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=255, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('platform', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'negative_check_market_level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NegativeCheckMarketLevelGenre',
            fields=[
                ('metric', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=255, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('platform', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'negative_check_market_level_genre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NegativeCheckMarketLevelPlatform',
            fields=[
                ('metric', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=255, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('platform', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'negative_check_market_level_platform',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NegativeCheckTitleLevel',
            fields=[
                ('metric', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('platform', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'negative_check_title_level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StringCheckDeveloperNameUnification',
            fields=[
                ('developer_1', models.CharField(blank=True, db_column='Developer 1', max_length=191, primary_key=True, serialize=False)),
                ('developer_2', models.CharField(blank=True, db_column='Developer 2', max_length=191, null=True)),
            ],
            options={
                'db_table': 'string_check_developer_name_unification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StringCheckPublisherNameUnification',
            fields=[
                ('publisher_1', models.CharField(blank=True, db_column='Publisher 1', max_length=191, primary_key=True, serialize=False)),
                ('publisher_2', models.CharField(blank=True, db_column='Publisher 2', max_length=191, null=True)),
            ],
            options={
                'db_table': 'string_check_publisher_name_unification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StringCheckTitleCaseSensitivity',
            fields=[
                ('segment', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=191, null=True)),
            ],
            options={
                'db_table': 'string_check_title_case_sensitivity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StringCheckWhitespace',
            fields=[
                ('problem', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('segment', models.CharField(blank=True, max_length=255, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('developer', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'string_check_whitespace',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelConversionIngame',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('platform', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('worldwide_in_game_spending_conversion', models.FloatField(blank=True, db_column='Worldwide In-Game Spending Conversion', null=True)),
                ('regions_in_game_spending_conversion', models.FloatField(blank=True, db_column='Regions In-Game Spending Conversion', null=True)),
                ('in_game_spending_conversion_difference_percentage', models.FloatField(blank=True, db_column='In-Game Spending Conversion Difference Percentage', null=True)),
            ],
            options={
                'db_table': 'title_level_conversion_ingame',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelConversionMicro',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('platform', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('worldwide_micro_conversion', models.FloatField(blank=True, db_column='Worldwide Micro Conversion', null=True)),
                ('regions_micro_conversion', models.FloatField(blank=True, db_column='Regions Micro Conversion', null=True)),
                ('micro_conversion_difference_percentage', models.FloatField(blank=True, db_column='Micro Conversion Difference Percentage', null=True)),
            ],
            options={
                'db_table': 'title_level_conversion_micro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelMauVsLifetimeDownloadsExcess',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('platform', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('mau', models.BigIntegerField(blank=True, db_column='MAU', null=True)),
                ('downloads_ltd', models.DecimalField(blank=True, db_column='downloads_LTD', decimal_places=0, max_digits=41, null=True)),
                ('mau_over_lifetime_downloads_percentage', models.DecimalField(blank=True, db_column='Mau Over Lifetime Downloads Percentage', decimal_places=5, max_digits=50, null=True)),
            ],
            options={
                'db_table': 'title_level_mau_vs_lifetime_downloads_excess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformF2PConsoleMau',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_mau', models.BigIntegerField(blank=True, db_column='All Platforms MAU', null=True)),
                ('subplatform_mau', models.DecimalField(blank=True, db_column='Subplatform MAU', decimal_places=0, max_digits=41, null=True)),
                ('mau_difference_percentage', models.DecimalField(blank=True, db_column='MAU Difference Percentage', decimal_places=5, max_digits=50, null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_f2p_console_mau',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformF2PConsoleRevenue',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_revenue', models.FloatField(blank=True, db_column='All Platforms Revenue', null=True)),
                ('subplatform_revenue', models.FloatField(blank=True, db_column='Subplatform Revenue', null=True)),
                ('revenue_difference_percentage', models.FloatField(blank=True, db_column='Revenue Difference Percentage', null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_f2p_console_revenue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformF2PPcMau',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_mau', models.BigIntegerField(blank=True, db_column='All Platforms MAU', null=True)),
                ('subplatform_mau', models.DecimalField(blank=True, db_column='Subplatform MAU', decimal_places=0, max_digits=41, null=True)),
                ('mau_difference_percentage', models.DecimalField(blank=True, db_column='MAU Difference Percentage', decimal_places=5, max_digits=50, null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_f2p_pc_mau',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformF2PPcRevenue',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_revenue', models.FloatField(blank=True, db_column='All Platforms Revenue', null=True)),
                ('subplatform_revenue', models.FloatField(blank=True, db_column='Subplatform Revenue', null=True)),
                ('revenue_difference_percentage', models.FloatField(blank=True, db_column='Revenue Difference Percentage', null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_f2p_pc_revenue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformMobileMau',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_mau', models.BigIntegerField(blank=True, db_column='All Platforms MAU', null=True)),
                ('subplatform_mau', models.DecimalField(blank=True, db_column='Subplatform MAU', decimal_places=0, max_digits=41, null=True)),
                ('mau_difference_percentage', models.DecimalField(blank=True, db_column='MAU Difference Percentage', decimal_places=5, max_digits=50, null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_mobile_mau',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformMobileRevenue',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_revenue', models.FloatField(blank=True, db_column='All Platforms Revenue', null=True)),
                ('subplatform_revenue', models.FloatField(blank=True, db_column='Subplatform Revenue', null=True)),
                ('revenue_difference_percentage', models.FloatField(blank=True, db_column='Revenue Difference Percentage', null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_mobile_revenue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformP2PPcMau',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_mau', models.BigIntegerField(blank=True, db_column='All Platforms MAU', null=True)),
                ('subplatform_mau', models.DecimalField(blank=True, db_column='Subplatform MAU', decimal_places=0, max_digits=41, null=True)),
                ('mau_difference_percentage', models.DecimalField(blank=True, db_column='MAU Difference Percentage', decimal_places=5, max_digits=50, null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_p2p_pc_mau',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformP2PPcRevenue',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_revenue', models.FloatField(blank=True, db_column='All Platforms Revenue', null=True)),
                ('subplatform_revenue', models.FloatField(blank=True, db_column='Subplatform Revenue', null=True)),
                ('revenue_difference_percentage', models.FloatField(blank=True, db_column='Revenue Difference Percentage', null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_p2p_pc_revenue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformPremiumConsoleMau',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_mau', models.BigIntegerField(blank=True, db_column='All Platforms MAU', null=True)),
                ('subplatform_mau', models.DecimalField(blank=True, db_column='Subplatform MAU', decimal_places=0, max_digits=41, null=True)),
                ('mau_difference_percentage', models.DecimalField(blank=True, db_column='MAU Difference Percentage', decimal_places=5, max_digits=50, null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_premium_console_mau',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformPremiumConsoleRevenue',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_revenue', models.FloatField(blank=True, db_column='All Platforms Revenue', null=True)),
                ('subplatform_revenue', models.FloatField(blank=True, db_column='Subplatform Revenue', null=True)),
                ('revenue_difference_percentage', models.FloatField(blank=True, db_column='Revenue Difference Percentage', null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_premium_console_revenue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformPremiumPcMau',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_mau', models.BigIntegerField(blank=True, db_column='All Platforms MAU', null=True)),
                ('subplatform_mau', models.DecimalField(blank=True, db_column='Subplatform MAU', decimal_places=0, max_digits=41, null=True)),
                ('mau_difference_percentage', models.DecimalField(blank=True, db_column='MAU Difference Percentage', decimal_places=5, max_digits=50, null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_premium_pc_mau',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TitleLevelPlatformVsSubplatformPremiumPcRevenue',
            fields=[
                ('title', models.CharField(blank=True, max_length=191, primary_key=True, serialize=False)),
                ('segment', models.CharField(blank=True, max_length=191, null=True)),
                ('region', models.CharField(blank=True, max_length=191, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('all_platforms_revenue', models.FloatField(blank=True, db_column='All Platforms Revenue', null=True)),
                ('subplatform_revenue', models.FloatField(blank=True, db_column='Subplatform Revenue', null=True)),
                ('revenue_difference_percentage', models.FloatField(blank=True, db_column='Revenue Difference Percentage', null=True)),
            ],
            options={
                'db_table': 'title_level_platform_vs_subplatform_premium_pc_revenue',
                'managed': False,
            },
        ),
    ]
